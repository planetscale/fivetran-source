// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: connector_sdk.proto

package fivetran_sdk

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	LogLevel_INFO    LogLevel = 0
	LogLevel_WARNING LogLevel = 1
	LogLevel_SEVERE  LogLevel = 2
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "INFO",
		1: "WARNING",
		2: "SEVERE",
	}
	LogLevel_value = map[string]int32{
		"INFO":    0,
		"WARNING": 1,
		"SEVERE":  2,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_connector_sdk_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_connector_sdk_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{0}
}

type SchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration map[string]string `protobuf:"bytes,1,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SchemaRequest) Reset() {
	*x = SchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaRequest) ProtoMessage() {}

func (x *SchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaRequest.ProtoReflect.Descriptor instead.
func (*SchemaRequest) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{0}
}

func (x *SchemaRequest) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type SchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SchemaResponse_SchemaResponseNotSupported
	//	*SchemaResponse_WithSchema
	//	*SchemaResponse_WithoutSchema
	Response              isSchemaResponse_Response `protobuf_oneof:"response"`
	SelectionNotSupported *bool                     `protobuf:"varint,4,opt,name=selection_not_supported,json=selectionNotSupported,proto3,oneof" json:"selection_not_supported,omitempty"`
}

func (x *SchemaResponse) Reset() {
	*x = SchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaResponse) ProtoMessage() {}

func (x *SchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaResponse.ProtoReflect.Descriptor instead.
func (*SchemaResponse) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{1}
}

func (m *SchemaResponse) GetResponse() isSchemaResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SchemaResponse) GetSchemaResponseNotSupported() bool {
	if x, ok := x.GetResponse().(*SchemaResponse_SchemaResponseNotSupported); ok {
		return x.SchemaResponseNotSupported
	}
	return false
}

func (x *SchemaResponse) GetWithSchema() *SchemaList {
	if x, ok := x.GetResponse().(*SchemaResponse_WithSchema); ok {
		return x.WithSchema
	}
	return nil
}

func (x *SchemaResponse) GetWithoutSchema() *TableList {
	if x, ok := x.GetResponse().(*SchemaResponse_WithoutSchema); ok {
		return x.WithoutSchema
	}
	return nil
}

func (x *SchemaResponse) GetSelectionNotSupported() bool {
	if x != nil && x.SelectionNotSupported != nil {
		return *x.SelectionNotSupported
	}
	return false
}

type isSchemaResponse_Response interface {
	isSchemaResponse_Response()
}

type SchemaResponse_SchemaResponseNotSupported struct {
	SchemaResponseNotSupported bool `protobuf:"varint,1,opt,name=schema_response_not_supported,json=schemaResponseNotSupported,proto3,oneof"`
}

type SchemaResponse_WithSchema struct {
	WithSchema *SchemaList `protobuf:"bytes,2,opt,name=with_schema,json=withSchema,proto3,oneof"`
}

type SchemaResponse_WithoutSchema struct {
	WithoutSchema *TableList `protobuf:"bytes,3,opt,name=without_schema,json=withoutSchema,proto3,oneof"`
}

func (*SchemaResponse_SchemaResponseNotSupported) isSchemaResponse_Response() {}

func (*SchemaResponse_WithSchema) isSchemaResponse_Response() {}

func (*SchemaResponse_WithoutSchema) isSchemaResponse_Response() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration map[string]string `protobuf:"bytes,1,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Selection     *Selection        `protobuf:"bytes,2,opt,name=selection,proto3,oneof" json:"selection,omitempty"`
	StateJson     *string           `protobuf:"bytes,3,opt,name=state_json,json=stateJson,proto3,oneof" json:"state_json,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRequest) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *UpdateRequest) GetSelection() *Selection {
	if x != nil {
		return x.Selection
	}
	return nil
}

func (x *UpdateRequest) GetStateJson() string {
	if x != nil && x.StateJson != nil {
		return *x.StateJson
	}
	return ""
}

type Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Selection:
	//
	//	*Selection_WithoutSchema
	//	*Selection_WithSchema
	Selection isSelection_Selection `protobuf_oneof:"selection"`
}

func (x *Selection) Reset() {
	*x = Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selection) ProtoMessage() {}

func (x *Selection) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selection.ProtoReflect.Descriptor instead.
func (*Selection) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{3}
}

func (m *Selection) GetSelection() isSelection_Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (x *Selection) GetWithoutSchema() *TablesWithNoSchema {
	if x, ok := x.GetSelection().(*Selection_WithoutSchema); ok {
		return x.WithoutSchema
	}
	return nil
}

func (x *Selection) GetWithSchema() *TablesWithSchema {
	if x, ok := x.GetSelection().(*Selection_WithSchema); ok {
		return x.WithSchema
	}
	return nil
}

type isSelection_Selection interface {
	isSelection_Selection()
}

type Selection_WithoutSchema struct {
	WithoutSchema *TablesWithNoSchema `protobuf:"bytes,1,opt,name=without_schema,json=withoutSchema,proto3,oneof"`
}

type Selection_WithSchema struct {
	WithSchema *TablesWithSchema `protobuf:"bytes,2,opt,name=with_schema,json=withSchema,proto3,oneof"`
}

func (*Selection_WithoutSchema) isSelection_Selection() {}

func (*Selection_WithSchema) isSelection_Selection() {}

type TablesWithNoSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables           []*TableSelection `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	IncludeNewTables bool              `protobuf:"varint,2,opt,name=include_new_tables,json=includeNewTables,proto3" json:"include_new_tables,omitempty"`
}

func (x *TablesWithNoSchema) Reset() {
	*x = TablesWithNoSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TablesWithNoSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablesWithNoSchema) ProtoMessage() {}

func (x *TablesWithNoSchema) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablesWithNoSchema.ProtoReflect.Descriptor instead.
func (*TablesWithNoSchema) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{4}
}

func (x *TablesWithNoSchema) GetTables() []*TableSelection {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *TablesWithNoSchema) GetIncludeNewTables() bool {
	if x != nil {
		return x.IncludeNewTables
	}
	return false
}

type TablesWithSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schemas           []*SchemaSelection `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
	IncludeNewSchemas bool               `protobuf:"varint,2,opt,name=include_new_schemas,json=includeNewSchemas,proto3" json:"include_new_schemas,omitempty"`
}

func (x *TablesWithSchema) Reset() {
	*x = TablesWithSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TablesWithSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablesWithSchema) ProtoMessage() {}

func (x *TablesWithSchema) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablesWithSchema.ProtoReflect.Descriptor instead.
func (*TablesWithSchema) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{5}
}

func (x *TablesWithSchema) GetSchemas() []*SchemaSelection {
	if x != nil {
		return x.Schemas
	}
	return nil
}

func (x *TablesWithSchema) GetIncludeNewSchemas() bool {
	if x != nil {
		return x.IncludeNewSchemas
	}
	return false
}

type SchemaSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Included         bool              `protobuf:"varint,1,opt,name=included,proto3" json:"included,omitempty"`
	SchemaName       string            `protobuf:"bytes,2,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Tables           []*TableSelection `protobuf:"bytes,3,rep,name=tables,proto3" json:"tables,omitempty"`
	IncludeNewTables bool              `protobuf:"varint,4,opt,name=include_new_tables,json=includeNewTables,proto3" json:"include_new_tables,omitempty"`
}

func (x *SchemaSelection) Reset() {
	*x = SchemaSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaSelection) ProtoMessage() {}

func (x *SchemaSelection) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaSelection.ProtoReflect.Descriptor instead.
func (*SchemaSelection) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{6}
}

func (x *SchemaSelection) GetIncluded() bool {
	if x != nil {
		return x.Included
	}
	return false
}

func (x *SchemaSelection) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *SchemaSelection) GetTables() []*TableSelection {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *SchemaSelection) GetIncludeNewTables() bool {
	if x != nil {
		return x.IncludeNewTables
	}
	return false
}

type TableSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Included          bool            `protobuf:"varint,1,opt,name=included,proto3" json:"included,omitempty"`
	TableName         string          `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Columns           map[string]bool `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	IncludeNewColumns bool            `protobuf:"varint,4,opt,name=include_new_columns,json=includeNewColumns,proto3" json:"include_new_columns,omitempty"`
}

func (x *TableSelection) Reset() {
	*x = TableSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSelection) ProtoMessage() {}

func (x *TableSelection) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSelection.ProtoReflect.Descriptor instead.
func (*TableSelection) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{7}
}

func (x *TableSelection) GetIncluded() bool {
	if x != nil {
		return x.Included
	}
	return false
}

func (x *TableSelection) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *TableSelection) GetColumns() map[string]bool {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TableSelection) GetIncludeNewColumns() bool {
	if x != nil {
		return x.IncludeNewColumns
	}
	return false
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateResponse_LogEntry
	//	*UpdateResponse_Operation
	Response isUpdateResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{8}
}

func (m *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateResponse) GetLogEntry() *LogEntry {
	if x, ok := x.GetResponse().(*UpdateResponse_LogEntry); ok {
		return x.LogEntry
	}
	return nil
}

func (x *UpdateResponse) GetOperation() *Operation {
	if x, ok := x.GetResponse().(*UpdateResponse_Operation); ok {
		return x.Operation
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_LogEntry struct {
	LogEntry *LogEntry `protobuf:"bytes,1,opt,name=log_entry,json=logEntry,proto3,oneof"`
}

type UpdateResponse_Operation struct {
	Operation *Operation `protobuf:"bytes,2,opt,name=operation,proto3,oneof"`
}

func (*UpdateResponse_LogEntry) isUpdateResponse_Response() {}

func (*UpdateResponse_Operation) isUpdateResponse_Response() {}

type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level   LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=fivetran_sdk.LogLevel" json:"level,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{9}
}

func (x *LogEntry) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_INFO
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Op:
	//
	//	*Operation_Record
	//	*Operation_SchemaChange
	//	*Operation_Checkpoint
	Op isOperation_Op `protobuf_oneof:"op"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{10}
}

func (m *Operation) GetOp() isOperation_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *Operation) GetRecord() *Record {
	if x, ok := x.GetOp().(*Operation_Record); ok {
		return x.Record
	}
	return nil
}

func (x *Operation) GetSchemaChange() *SchemaChange {
	if x, ok := x.GetOp().(*Operation_SchemaChange); ok {
		return x.SchemaChange
	}
	return nil
}

func (x *Operation) GetCheckpoint() *Checkpoint {
	if x, ok := x.GetOp().(*Operation_Checkpoint); ok {
		return x.Checkpoint
	}
	return nil
}

type isOperation_Op interface {
	isOperation_Op()
}

type Operation_Record struct {
	Record *Record `protobuf:"bytes,1,opt,name=record,proto3,oneof"`
}

type Operation_SchemaChange struct {
	SchemaChange *SchemaChange `protobuf:"bytes,2,opt,name=schema_change,json=schemaChange,proto3,oneof"`
}

type Operation_Checkpoint struct {
	Checkpoint *Checkpoint `protobuf:"bytes,3,opt,name=checkpoint,proto3,oneof"`
}

func (*Operation_Record) isOperation_Op() {}

func (*Operation_SchemaChange) isOperation_Op() {}

func (*Operation_Checkpoint) isOperation_Op() {}

type SchemaChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Change:
	//
	//	*SchemaChange_WithSchema
	//	*SchemaChange_WithoutSchema
	Change isSchemaChange_Change `protobuf_oneof:"change"`
}

func (x *SchemaChange) Reset() {
	*x = SchemaChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaChange) ProtoMessage() {}

func (x *SchemaChange) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaChange.ProtoReflect.Descriptor instead.
func (*SchemaChange) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{11}
}

func (m *SchemaChange) GetChange() isSchemaChange_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SchemaChange) GetWithSchema() *SchemaList {
	if x, ok := x.GetChange().(*SchemaChange_WithSchema); ok {
		return x.WithSchema
	}
	return nil
}

func (x *SchemaChange) GetWithoutSchema() *TableList {
	if x, ok := x.GetChange().(*SchemaChange_WithoutSchema); ok {
		return x.WithoutSchema
	}
	return nil
}

type isSchemaChange_Change interface {
	isSchemaChange_Change()
}

type SchemaChange_WithSchema struct {
	WithSchema *SchemaList `protobuf:"bytes,1,opt,name=with_schema,json=withSchema,proto3,oneof"`
}

type SchemaChange_WithoutSchema struct {
	WithoutSchema *TableList `protobuf:"bytes,2,opt,name=without_schema,json=withoutSchema,proto3,oneof"`
}

func (*SchemaChange_WithSchema) isSchemaChange_Change() {}

func (*SchemaChange_WithoutSchema) isSchemaChange_Change() {}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaName *string               `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3,oneof" json:"schema_name,omitempty"`
	TableName  string                `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Type       OpType                `protobuf:"varint,3,opt,name=type,proto3,enum=fivetran_sdk.OpType" json:"type,omitempty"`
	Data       map[string]*ValueType `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{12}
}

func (x *Record) GetSchemaName() string {
	if x != nil && x.SchemaName != nil {
		return *x.SchemaName
	}
	return ""
}

func (x *Record) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Record) GetType() OpType {
	if x != nil {
		return x.Type
	}
	return OpType_UPSERT
}

func (x *Record) GetData() map[string]*ValueType {
	if x != nil {
		return x.Data
	}
	return nil
}

type Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateJson string `protobuf:"bytes,1,opt,name=state_json,json=stateJson,proto3" json:"state_json,omitempty"`
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_sdk_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_connector_sdk_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_connector_sdk_proto_rawDescGZIP(), []int{13}
}

func (x *Checkpoint) GetStateJson() string {
	if x != nil {
		return x.StateJson
	}
	return ""
}

var File_connector_sdk_proto protoreflect.FileDescriptor

var file_connector_sdk_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x64, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f,
	0x73, 0x64, 0x6b, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x66, 0x69, 0x76,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb9, 0x02, 0x0a, 0x0e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x1d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x1a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74,
	0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x40, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74,
	0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x3b, 0x0a, 0x17, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x15, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0xa4, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64,
	0x6b, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x1a,
	0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0xa6,
	0x01, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0e,
	0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f,
	0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66,
	0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0a,
	0x77, 0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x12, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x34, 0x0a,
	0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e,
	0x65, 0x77, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x22, 0x7b, 0x0a, 0x10, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61,
	0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x22, 0xb2,
	0x01, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64,
	0x6b, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74,
	0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x52, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x66,
	0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x4c, 0x6f, 0x67, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73,
	0x64, 0x6b, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x76,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x76,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x70, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x40, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75,
	0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x6f,
	0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e,
	0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x69, 0x76,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x50, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x2a,
	0x2d, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x56, 0x45, 0x52, 0x45, 0x10, 0x02, 0x32, 0xc4,
	0x02, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x66, 0x0a, 0x11,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x12, 0x26, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x69, 0x76, 0x65,
	0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x66,
	0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72,
	0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x1b, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66,
	0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61,
	0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x73,
	0x64, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x1f, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x19, 0x66, 0x69, 0x76,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x76, 0x65, 0x74, 0x72,
	0x61, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_connector_sdk_proto_rawDescOnce sync.Once
	file_connector_sdk_proto_rawDescData = file_connector_sdk_proto_rawDesc
)

func file_connector_sdk_proto_rawDescGZIP() []byte {
	file_connector_sdk_proto_rawDescOnce.Do(func() {
		file_connector_sdk_proto_rawDescData = protoimpl.X.CompressGZIP(file_connector_sdk_proto_rawDescData)
	})
	return file_connector_sdk_proto_rawDescData
}

var file_connector_sdk_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_connector_sdk_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_connector_sdk_proto_goTypes = []interface{}{
	(LogLevel)(0),                     // 0: fivetran_sdk.LogLevel
	(*SchemaRequest)(nil),             // 1: fivetran_sdk.SchemaRequest
	(*SchemaResponse)(nil),            // 2: fivetran_sdk.SchemaResponse
	(*UpdateRequest)(nil),             // 3: fivetran_sdk.UpdateRequest
	(*Selection)(nil),                 // 4: fivetran_sdk.Selection
	(*TablesWithNoSchema)(nil),        // 5: fivetran_sdk.TablesWithNoSchema
	(*TablesWithSchema)(nil),          // 6: fivetran_sdk.TablesWithSchema
	(*SchemaSelection)(nil),           // 7: fivetran_sdk.SchemaSelection
	(*TableSelection)(nil),            // 8: fivetran_sdk.TableSelection
	(*UpdateResponse)(nil),            // 9: fivetran_sdk.UpdateResponse
	(*LogEntry)(nil),                  // 10: fivetran_sdk.LogEntry
	(*Operation)(nil),                 // 11: fivetran_sdk.Operation
	(*SchemaChange)(nil),              // 12: fivetran_sdk.SchemaChange
	(*Record)(nil),                    // 13: fivetran_sdk.Record
	(*Checkpoint)(nil),                // 14: fivetran_sdk.Checkpoint
	nil,                               // 15: fivetran_sdk.SchemaRequest.ConfigurationEntry
	nil,                               // 16: fivetran_sdk.UpdateRequest.ConfigurationEntry
	nil,                               // 17: fivetran_sdk.TableSelection.ColumnsEntry
	nil,                               // 18: fivetran_sdk.Record.DataEntry
	(*SchemaList)(nil),                // 19: fivetran_sdk.SchemaList
	(*TableList)(nil),                 // 20: fivetran_sdk.TableList
	(OpType)(0),                       // 21: fivetran_sdk.OpType
	(*ValueType)(nil),                 // 22: fivetran_sdk.ValueType
	(*ConfigurationFormRequest)(nil),  // 23: fivetran_sdk.ConfigurationFormRequest
	(*TestRequest)(nil),               // 24: fivetran_sdk.TestRequest
	(*ConfigurationFormResponse)(nil), // 25: fivetran_sdk.ConfigurationFormResponse
	(*TestResponse)(nil),              // 26: fivetran_sdk.TestResponse
}
var file_connector_sdk_proto_depIdxs = []int32{
	15, // 0: fivetran_sdk.SchemaRequest.configuration:type_name -> fivetran_sdk.SchemaRequest.ConfigurationEntry
	19, // 1: fivetran_sdk.SchemaResponse.with_schema:type_name -> fivetran_sdk.SchemaList
	20, // 2: fivetran_sdk.SchemaResponse.without_schema:type_name -> fivetran_sdk.TableList
	16, // 3: fivetran_sdk.UpdateRequest.configuration:type_name -> fivetran_sdk.UpdateRequest.ConfigurationEntry
	4,  // 4: fivetran_sdk.UpdateRequest.selection:type_name -> fivetran_sdk.Selection
	5,  // 5: fivetran_sdk.Selection.without_schema:type_name -> fivetran_sdk.TablesWithNoSchema
	6,  // 6: fivetran_sdk.Selection.with_schema:type_name -> fivetran_sdk.TablesWithSchema
	8,  // 7: fivetran_sdk.TablesWithNoSchema.tables:type_name -> fivetran_sdk.TableSelection
	7,  // 8: fivetran_sdk.TablesWithSchema.schemas:type_name -> fivetran_sdk.SchemaSelection
	8,  // 9: fivetran_sdk.SchemaSelection.tables:type_name -> fivetran_sdk.TableSelection
	17, // 10: fivetran_sdk.TableSelection.columns:type_name -> fivetran_sdk.TableSelection.ColumnsEntry
	10, // 11: fivetran_sdk.UpdateResponse.log_entry:type_name -> fivetran_sdk.LogEntry
	11, // 12: fivetran_sdk.UpdateResponse.operation:type_name -> fivetran_sdk.Operation
	0,  // 13: fivetran_sdk.LogEntry.level:type_name -> fivetran_sdk.LogLevel
	13, // 14: fivetran_sdk.Operation.record:type_name -> fivetran_sdk.Record
	12, // 15: fivetran_sdk.Operation.schema_change:type_name -> fivetran_sdk.SchemaChange
	14, // 16: fivetran_sdk.Operation.checkpoint:type_name -> fivetran_sdk.Checkpoint
	19, // 17: fivetran_sdk.SchemaChange.with_schema:type_name -> fivetran_sdk.SchemaList
	20, // 18: fivetran_sdk.SchemaChange.without_schema:type_name -> fivetran_sdk.TableList
	21, // 19: fivetran_sdk.Record.type:type_name -> fivetran_sdk.OpType
	18, // 20: fivetran_sdk.Record.data:type_name -> fivetran_sdk.Record.DataEntry
	22, // 21: fivetran_sdk.Record.DataEntry.value:type_name -> fivetran_sdk.ValueType
	23, // 22: fivetran_sdk.Connector.ConfigurationForm:input_type -> fivetran_sdk.ConfigurationFormRequest
	24, // 23: fivetran_sdk.Connector.Test:input_type -> fivetran_sdk.TestRequest
	1,  // 24: fivetran_sdk.Connector.Schema:input_type -> fivetran_sdk.SchemaRequest
	3,  // 25: fivetran_sdk.Connector.Update:input_type -> fivetran_sdk.UpdateRequest
	25, // 26: fivetran_sdk.Connector.ConfigurationForm:output_type -> fivetran_sdk.ConfigurationFormResponse
	26, // 27: fivetran_sdk.Connector.Test:output_type -> fivetran_sdk.TestResponse
	2,  // 28: fivetran_sdk.Connector.Schema:output_type -> fivetran_sdk.SchemaResponse
	9,  // 29: fivetran_sdk.Connector.Update:output_type -> fivetran_sdk.UpdateResponse
	26, // [26:30] is the sub-list for method output_type
	22, // [22:26] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_connector_sdk_proto_init() }
func file_connector_sdk_proto_init() {
	if File_connector_sdk_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_connector_sdk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TablesWithNoSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TablesWithSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_sdk_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_connector_sdk_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SchemaResponse_SchemaResponseNotSupported)(nil),
		(*SchemaResponse_WithSchema)(nil),
		(*SchemaResponse_WithoutSchema)(nil),
	}
	file_connector_sdk_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_connector_sdk_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Selection_WithoutSchema)(nil),
		(*Selection_WithSchema)(nil),
	}
	file_connector_sdk_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*UpdateResponse_LogEntry)(nil),
		(*UpdateResponse_Operation)(nil),
	}
	file_connector_sdk_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Operation_Record)(nil),
		(*Operation_SchemaChange)(nil),
		(*Operation_Checkpoint)(nil),
	}
	file_connector_sdk_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SchemaChange_WithSchema)(nil),
		(*SchemaChange_WithoutSchema)(nil),
	}
	file_connector_sdk_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connector_sdk_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_connector_sdk_proto_goTypes,
		DependencyIndexes: file_connector_sdk_proto_depIdxs,
		EnumInfos:         file_connector_sdk_proto_enumTypes,
		MessageInfos:      file_connector_sdk_proto_msgTypes,
	}.Build()
	File_connector_sdk_proto = out.File
	file_connector_sdk_proto_rawDesc = nil
	file_connector_sdk_proto_goTypes = nil
	file_connector_sdk_proto_depIdxs = nil
}
